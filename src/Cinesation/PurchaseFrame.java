/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cinesation;

import Data.*;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;

/**
 *
 * @author Rionna
 */
public class PurchaseFrame extends javax.swing.JFrame {
    public String myID, cID, row, title;
    public int mID, TTid, purchID, snkID, seatID, scnID, Quantity, cinID, totSeat, points;
    public double total, tickCost, snkCost, change, Discount;
    
    public Data.CustomerData cData;
    public Data.PurchaseData pData;
    public Data.TicketData tData;
    public Data.TicketTypeDate tTypeData;
    public Data.ScreeningData scnData;
    public Data.movieData mData;
    public Data.SnackData snkData;
    public Data.SeatData seatData;
    public Data.personData persData;
    
    public Data.Purchase myPurch;
    public Data.Employee emp;
    public Data.Customer cust;
    
    public MySQLConnector db= new MySQLConnector();
    
    public List<movie> movieL=new ArrayList();
    public List<Screening> screenL=new ArrayList();
    public List<Purchase> purchL=new ArrayList();
    public List<Ticket> tickL=new ArrayList();
    public List<TicketType> tTypeL=new ArrayList();
    public List<Snack> snackL=new ArrayList();
    public List<Seat> seatL=new ArrayList();
    public List<String> snackPurch=new ArrayList();
    public List<Integer> snackQuant= new ArrayList();

    
    public PurchaseFrame(Data.Employee e) throws SQLException {
        initComponents();
        
        this.emp=e;
        myID=emp.getEmpID();
        
        cData= new CustomerData();
        pData=new PurchaseData();
        tData=new TicketData();
        tTypeData=new TicketTypeDate();
        scnData= new ScreeningData();
        mData=new movieData();
        snkData=new SnackData();
        seatData=new SeatData();
        persData=new personData();
        
        movieL=mData.getMovieArray();
        purchL=pData.getPurchArray();
        tickL=tData.getTicketArray();
        tTypeL=tTypeData.getTTArray();
        screenL=scnData.getScnArray();
        snackL=snkData.getSnkArray();
        seatL=seatData.getSeatArray();
        
        
    }

    

    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtCustomer = new javax.swing.JTextField();
        btnCustomer = new javax.swing.JButton();
        pScreening = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jcbMovie = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jcbTT = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jcbDate = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jcbTime = new javax.swing.JComboBox<>();
        jchkMovie = new javax.swing.JCheckBox();
        jchkTT = new javax.swing.JCheckBox();
        btnScn = new javax.swing.JButton();
        pSeat = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jcbSeat = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jcbRow = new javax.swing.JComboBox<>();
        btnSnack = new javax.swing.JButton();
        btnAddTicket = new javax.swing.JButton();
        btnSeatF = new javax.swing.JButton();
        jckRow = new javax.swing.JCheckBox();
        pSnack = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jcbSnack = new javax.swing.JComboBox<>();
        btnMoreS = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        spnQuantity = new javax.swing.JSpinner();
        btnBack = new javax.swing.JButton();
        pReceipt = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taReceipt = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        edtAmountDue = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        edtGiven = new javax.swing.JTextField();
        btnChange = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        edtChange = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(51, 255, 0));
        jPanel1.setForeground(new java.awt.Color(51, 204, 0));

        jLabel1.setText("Enter In Customer ID");

        btnCustomer.setBackground(new java.awt.Color(0, 0, 0));
        btnCustomer.setForeground(new java.awt.Color(51, 255, 0));
        btnCustomer.setText("Next");
        btnCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(edtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(btnCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edtCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnCustomer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pScreening.setBackground(new java.awt.Color(51, 255, 0));
        pScreening.setForeground(new java.awt.Color(51, 255, 0));
        pScreening.setEnabled(false);

        jLabel2.setText("Choose Movie");

        jcbMovie.setEnabled(false);
        jcbMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMovieActionPerformed(evt);
            }
        });

        jLabel3.setText("Choose Ticket Type");

        jcbTT.setEnabled(false);

        jLabel4.setText("Choose Time");

        jcbDate.setEnabled(false);

        jLabel12.setText("Choose Date");

        jcbTime.setEnabled(false);

        jchkMovie.setText("Comfirm Movie");
        jchkMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkMovieActionPerformed(evt);
            }
        });

        jchkTT.setText("Comfirm TicketType");
        jchkTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkTTActionPerformed(evt);
            }
        });

        btnScn.setBackground(new java.awt.Color(0, 0, 0));
        btnScn.setForeground(new java.awt.Color(51, 255, 0));
        btnScn.setText("Next");
        btnScn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pScreeningLayout = new javax.swing.GroupLayout(pScreening);
        pScreening.setLayout(pScreeningLayout);
        pScreeningLayout.setHorizontalGroup(
            pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pScreeningLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbDate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbMovie, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbTT, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbTime, javax.swing.GroupLayout.Alignment.TRAILING, 0, 167, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pScreeningLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jchkTT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jchkMovie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(pScreeningLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(btnScn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pScreeningLayout.setVerticalGroup(
            pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pScreeningLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jcbMovie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jchkMovie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jchkTT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pScreeningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnScn)
                .addContainerGap())
        );

        pSeat.setBackground(new java.awt.Color(51, 255, 0));
        pSeat.setForeground(new java.awt.Color(51, 255, 0));
        pSeat.setEnabled(false);

        jLabel5.setText("Select Seat");

        jcbSeat.setEnabled(false);

        jLabel10.setText("Select Row");

        jcbRow.setEnabled(false);

        btnSnack.setBackground(new java.awt.Color(0, 0, 0));
        btnSnack.setForeground(new java.awt.Color(51, 255, 0));
        btnSnack.setText("Add Snack");
        btnSnack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSnackActionPerformed(evt);
            }
        });

        btnAddTicket.setBackground(new java.awt.Color(0, 0, 0));
        btnAddTicket.setForeground(new java.awt.Color(51, 255, 0));
        btnAddTicket.setText("Add Another Ticket");
        btnAddTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTicketActionPerformed(evt);
            }
        });

        btnSeatF.setBackground(new java.awt.Color(0, 0, 0));
        btnSeatF.setForeground(new java.awt.Color(51, 255, 0));
        btnSeatF.setText("Finish");
        btnSeatF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatFActionPerformed(evt);
            }
        });

        jckRow.setText("Confirm Row");
        jckRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jckRowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pSeatLayout = new javax.swing.GroupLayout(pSeat);
        pSeat.setLayout(pSeatLayout);
        pSeatLayout.setHorizontalGroup(
            pSeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSeatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pSeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pSeatLayout.createSequentialGroup()
                        .addComponent(btnSeatF, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(btnSnack))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pSeatLayout.createSequentialGroup()
                        .addGroup(pSeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pSeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbRow, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbSeat, 0, 170, Short.MAX_VALUE)))
                    .addGroup(pSeatLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jckRow, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        pSeatLayout.setVerticalGroup(
            pSeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSeatLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pSeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbRow, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jckRow)
                .addGap(7, 7, 7)
                .addGroup(pSeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(pSeatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeatF)
                    .addComponent(btnSnack)
                    .addComponent(btnAddTicket))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pSnack.setBackground(new java.awt.Color(51, 255, 0));
        pSnack.setEnabled(false);

        jLabel6.setText("Select Snack");

        btnMoreS.setBackground(new java.awt.Color(0, 0, 0));
        btnMoreS.setForeground(new java.awt.Color(51, 255, 0));
        btnMoreS.setText("Add Another Snack");
        btnMoreS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoreSActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 0, 0));
        btnDone.setForeground(new java.awt.Color(51, 255, 0));
        btnDone.setText("Finish");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        jLabel11.setText("Quantity");

        spnQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout pSnackLayout = new javax.swing.GroupLayout(pSnack);
        pSnack.setLayout(pSnackLayout);
        pSnackLayout.setHorizontalGroup(
            pSnackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSnackLayout.createSequentialGroup()
                .addGroup(pSnackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pSnackLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnMoreS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pSnackLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(pSnackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pSnackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbSnack, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spnQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pSnackLayout.setVerticalGroup(
            pSnackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pSnackLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pSnackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbSnack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pSnackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(pSnackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDone)
                    .addComponent(btnMoreS))
                .addContainerGap())
        );

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setForeground(new java.awt.Color(51, 255, 0));
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        pReceipt.setBackground(new java.awt.Color(51, 255, 0));

        taReceipt.setColumns(20);
        taReceipt.setRows(5);
        jScrollPane1.setViewportView(taReceipt);

        javax.swing.GroupLayout pReceiptLayout = new javax.swing.GroupLayout(pReceipt);
        pReceipt.setLayout(pReceiptLayout);
        pReceiptLayout.setHorizontalGroup(
            pReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pReceiptLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pReceiptLayout.setVerticalGroup(
            pReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pReceiptLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(51, 255, 0));
        jPanel2.setEnabled(false);

        jLabel7.setText("Amount Due        R");

        jLabel8.setText("Amount Given      R");

        edtGiven.setText("0.00");

        btnChange.setBackground(new java.awt.Color(0, 0, 0));
        btnChange.setForeground(new java.awt.Color(51, 255, 0));
        btnChange.setText("Calc Change");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        jLabel9.setText("Change                     R");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtChange, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(edtAmountDue, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(edtGiven))))
                .addGap(82, 82, 82))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(edtAmountDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edtGiven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnChange)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(edtChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 255, 0));
        jLabel13.setText("Adding Customer Purchase");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pScreening, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pSeat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pSnack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pReceipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(73, 73, 73))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pScreening, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pSnack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerActionPerformed
        // TODO add your handling code here:
        
        cID=edtCustomer.getText();
        
        if(cData.getCustomer(cID)==true)
        {
            jcbMovie.enable();
            jcbTT.disable();
            //btnCustomer.enable(false);
            jcbMovie.removeAllItems();
            
            for(int i=0;i<movieL.size();i++)
            {
                jcbMovie.addItem((movieL.get(i)).getTitle());
            }
            
            try {
                myPurch=createPurch( myID,cID);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            purchID=myPurch.getPurchID();
            
        }
        else{
            edtCustomer.setText("");
            JOptionPane.showMessageDialog(null,"Invalid Customer ID. Please Enter In correct ID Number Or go back to the MAIN MENU and add Customer to the system","ERROR", JOptionPane.ERROR_MESSAGE);
            
        }
        
        
    }//GEN-LAST:event_btnCustomerActionPerformed

    private void jcbMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMovieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbMovieActionPerformed

    private void jchkMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkMovieActionPerformed
        // TODO add your handling code here:
        if(jchkMovie.isSelected())
        {
            jcbMovie.enable(false);
        jcbTT.removeAllItems();
        tTypeL=tTypeData.getTTArray();
        screenL=scnData.getScnArray();
        screenL=scnData.getScnArray();
        if(jcbMovie.getSelectedIndex()>=0)
        {
            jcbTT.enable();
            jcbTT.removeAllItems();
            
            mID=(movieL.get(jcbMovie.getSelectedIndex())).getMovieID(); 
            title=(movieL.get(jcbMovie.getSelectedIndex())).getTitle();
            

            
            boolean tfound=false;
            int tid, sTid,sMid;
            for(int j=0; j<tTypeL.size();j++){
                tid=(tTypeL.get(j)).getTypeID();
                for(int i=0; i<screenL.size();i++)
                {
                    sTid=screenL.get(i).getTickType();
                    sMid=screenL.get(i).getMovieID();
                    if((tid==sTid)&&(sMid==mID))
                    {
                        tfound=true;
                        
                    }

                }
                if(tfound==true)
                {
                    jcbTT.addItem(tTypeL.get(j).getType());
                }
                tfound=false;
            }

        }
        
            
        }
        else
        {
            jcbTT.removeAllItems();
            jcbTT.enable(false);
        }
        
    }//GEN-LAST:event_jchkMovieActionPerformed

    private void jchkTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkTTActionPerformed
        // TODO add your handling code here:
        if(jchkTT.isSelected()){
            jcbDate.removeAllItems();
            jcbTime.removeAllItems();
            String type=(String) jcbTT.getSelectedItem();
            jcbDate.enable();
            jcbTime.enable();
            Set<String> sdate= new HashSet<>();
            Set<String> stime= new HashSet<>();
            int i=0;
            while(i<tTypeL.size())
            {
                if(type.equals(tTypeL.get(i).getType()))
                {
                    TTid=tTypeL.get(i).getTypeID();
                    tickCost=tTypeL.get(i).getTicketPrice();
                }
                i++;
                
            }
            
            for(int j=0; j<screenL.size();j++){
                if((screenL.get(j).getMovieID()==mID) && (screenL.get(j).getTickType()==TTid))
                {
                    sdate.add(screenL.get(j).getDate());
                    stime.add(screenL.get(j).getTime());
                }
            }
            for(String s : sdate)
            {
                jcbDate.addItem(s);
            }
            
            for(String s : stime)
            {
                jcbTime.addItem(s);
            }
        }
        else{
            jcbDate.enable(false);
            jcbTime.enable(false);
        }
    }//GEN-LAST:event_jchkTTActionPerformed

    private void btnScnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScnActionPerformed
     // TODO add your handling code here:
     
        if ((jcbDate.getSelectedIndex()>=0) && (jcbTime.getSelectedIndex()>=0)) 
        {
             jcbRow.enable(true);
             jcbRow.removeAllItems();
             String pDate= jcbDate.getSelectedItem().toString();
             String pTime=jcbTime.getSelectedItem().toString();
             Set<String> sRow= new HashSet<>();
             Screening newScn= new Screening();
             for(int i=0; i<screenL.size();i++)
             {

                 newScn=screenL.get(i);
                 if((newScn.getMovieID()==mID) && (newScn.getDate().equals(pDate)) && (newScn.getTime().equals(pTime)) && (newScn.getTickType()==TTid))
                 {
                     scnID=newScn.getScnID();
                     cinID=newScn.getCinemaID();
                 }


             }

             for(int i=0; i<seatL.size();i++)
             {
                 if(cinID==seatL.get(i).getCinemaID()){
                     sRow.add(seatL.get(i).getSeatRow());
                 }
             }

             for(String s : sRow)
                 {
                     jcbRow.addItem(s);
                 }
            
        }
        else{
            JOptionPane.showMessageDialog(null,"Please Make sure you have selected a Date and time","ERROR", JOptionPane.ERROR_MESSAGE);
            
        }
        
        
        
        
    }//GEN-LAST:event_btnScnActionPerformed

    private void jckRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jckRowActionPerformed
        // TODO add your handling code here:
        if(jckRow.isSelected()){
            btnAddTicket.enable();
            btnSeatF.enable();
            btnSnack.enable();
            row=jcbRow.getSelectedItem().toString();
            jcbSeat.enable(true);
            jcbSeat.removeAllItems();
            Set<String> seatNum= new HashSet<>();
            Seat seat= new Seat();
            String s;
            
            boolean found=false;
            for(int i=0; i<seatL.size();i++){
                
                seat=seatL.get(i);
                if((seat.getCinemaID()==cinID)&& (seat.getSeatRow().equals(row))){
                    
                    
                    for(Ticket t : tickL)
                    {
                        if(t.getSeatID()==seat.getSeatID()){
                            found=true;
                        }
                    }
                    
                    if(found==false)
                    {
                        jcbSeat.addItem((String.valueOf(seat.getSeatNumber())));
                    }
                    
                }
                
            }
            
            if(jcbSeat.getItemCount()==0){
                JOptionPane.showMessageDialog(null,"Please Change Selection, this row is fully booked","ERROR", JOptionPane.ERROR_MESSAGE);
                
            }
            
           
            
        }
    }//GEN-LAST:event_jckRowActionPerformed

    private void btnSeatFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatFActionPerformed
        // TODO add your handling code here:
        
        
        try {
            int iSeat= Integer.parseInt(jcbSeat.getSelectedItem().toString());
            Seat s=new Seat();
            
            for(int i=0; i<seatL.size();i++){
                s=seatL.get(i);
                if(s.getCinemaID()==cinID && s.getSeatRow().equals(row) && s.getSeatNumber()==iSeat)
                {
                    seatID=s.getSeatID();
                    
                }
                
            }
            
            tData.addTicket(scnID, seatID, purchID);
            pData.updateTotal(purchID, tickCost);
            purchL=pData.getPurchArray();
            tickL=tData.getTicketArray();
            myPurch=purchL.get(purchL.size()-1);
            tickL=tData.getTicketArray();
            total=myPurch.getTotal();
            DecimalFormat decimalFormat = new DecimalFormat("#.00",DecimalFormatSymbols.getInstance(Locale.US));
            edtAmountDue.setText(String.valueOf(decimalFormat.format(total)));
            btnChange.enable();
            
            btnSeatF.enable(false);
            btnDone.enable(false);
            btnAddTicket.enable(false);
            btnCustomer.enable(false);
            btnScn.enable(false);
            btnSnack.enable(false);
            btnBack.enable(false);
            
            
            
            
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }//GEN-LAST:event_btnSeatFActionPerformed

    private void btnAddTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTicketActionPerformed
        // TODO add your handling code here:
        
        try {
            int iSeat= Integer.parseInt(jcbSeat.getSelectedItem().toString());
            Seat s=new Seat();
            
            for(int i=0; i<seatL.size();i++){
                s=seatL.get(i);
                if(s.getCinemaID()==cinID && s.getSeatRow().equals(row) && s.getSeatNumber()==iSeat)
                {
                    seatID=s.getSeatID();
                    
                }
                
            }
            
            tData.addTicket(scnID, seatID, purchID);
            pData.updateTotal(purchID, tickCost);
            purchL=pData.getPurchArray();
            myPurch=purchL.get(purchL.size()-1);
            tickL=tData.getTicketArray();
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        jcbSeat.removeAllItems();
        jckRow.setSelected(false);
    }//GEN-LAST:event_btnAddTicketActionPerformed

    private void btnSnackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSnackActionPerformed
        // TODO add your handling code here:
        btnSeatF.enable(false);
        try {
            int iSeat= Integer.parseInt(jcbSeat.getSelectedItem().toString());
            Seat s=new Seat();
            
            for(int i=0; i<seatL.size();i++){
                s=seatL.get(i);
                if(s.getCinemaID()==cinID && s.getSeatRow().equals(row) && s.getSeatNumber()==iSeat)
                {
                    seatID=s.getSeatID();
                    
                }
                
            }
            
            tData.addTicket(scnID, seatID, purchID);
            pData.updateTotal(purchID, tickCost);
            purchL=pData.getPurchArray();
            myPurch=purchL.get(purchL.size()-1);
            tickL=tData.getTicketArray();
            btnAddTicket.enable(false);
            btnSeatF.enable(false);
            
            for(int i=0; i<snackL.size();i++){
                jcbSnack.addItem(snackL.get(i).getSnackName());
            }
            btnMoreS.enable();
            btnDone.enable();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSnackActionPerformed

    private void btnMoreSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoreSActionPerformed
        // TODO add your handling code here:
        String stmt;
        Quantity=(Integer) spnQuantity.getValue();
        if(Quantity>0){
        String mySnack= jcbSnack.getSelectedItem().toString();
            Snack s=new Snack();
            
            for(int i=0; i<snackL.size();i++){
                s=snackL.get(i);
                if(s.getSnackName()==mySnack)
                {
                    snkID=s.getSnackID();
                    snkCost=s.getPrice();
                    
                }
            }
            
            try {
                stmt="INSERT INTO snack_purchase(SnackID, Quantity, PurchaseID) VALUES("+snkID+","+Quantity+","+purchID+")";
                db.update(stmt);
                insertSP(stmt);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            snackPurch.add(mySnack);
            snackQuant.add(Quantity);
            
            try {
                pData.updateTotal(purchID, Quantity*snkCost);
                purchL=pData.getPurchArray();
                myPurch=purchL.get(purchL.size()-1);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            spnQuantity.setValue(0);
            
            
            
        } 
        else{
            JOptionPane.showMessageDialog(null,"Please select a quantity size greater than 0","ERROR", JOptionPane.ERROR_MESSAGE);
                
            
        }
            
    }//GEN-LAST:event_btnMoreSActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        String stmt;
        Quantity=(Integer) spnQuantity.getValue();
        if(Quantity>0){
        String mySnack= jcbSnack.getSelectedItem().toString();
            Snack s=new Snack();
            
            for(int i=0; i<snackL.size();i++){
                s=snackL.get(i);
                if(s.getSnackName()==mySnack)
                {
                    snkID=s.getSnackID();
                    snkCost=s.getPrice();
                    
                }
            }
            
            try {
                stmt="INSERT INTO snack_purchase(SnackID, Quantity, PurchaseID) VALUES("+snkID+","+Quantity+","+purchID+")";
                db.update(stmt);
                insertSP(stmt);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            snackPurch.add(mySnack);
            snackQuant.add(Quantity);
            
            try {
                pData.updateTotal(purchID, Quantity*snkCost);
                purchL=pData.getPurchArray();
                myPurch=purchL.get(purchL.size()-1);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            spnQuantity.setValue(0);
            
            btnMoreS.enable(false);
            total=myPurch.getTotal();
            DecimalFormat decimalFormat = new DecimalFormat("#.00",DecimalFormatSymbols.getInstance(Locale.US));
            edtAmountDue.setText(String.valueOf(decimalFormat.format(total)));
            btnChange.enable();
            btnDone.enable(false);
            btnAddTicket.enable(false);
            btnCustomer.enable(false);
            btnScn.enable(false);
            btnSeatF.enable(false);
            btnSnack.enable(false);
            btnBack.enable(false); 
        } 
        else{
            JOptionPane.showMessageDialog(null,"Please select a quantity size greater than 0","ERROR", JOptionPane.ERROR_MESSAGE);
                
            
        }
            
    
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        // TODO add your handling code here:
        double aGiven, aDue;
        
        aGiven=Double.parseDouble(edtGiven.getText());
        aDue=Double.parseDouble(edtAmountDue.getText());
        points=(int) (total/10);
        
        Customer c= new Customer();
        c=cData.getCustomerData(cID);
        
        if(aGiven>aDue)
        {
            change=aGiven-aDue;
            edtChange.setText(String.format("%.2f", change));
            printR();
            btnChange.enable(false);
            btnBack.enable(true);  
            try {
                cData.addPoints(cID, points);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
        if (aGiven<aDue) {
            change=0;
            aDue=aDue-aGiven;
            DecimalFormat decimalFormat = new DecimalFormat("#.00",DecimalFormatSymbols.getInstance(Locale.US));
            edtAmountDue.setText(String.valueOf(decimalFormat.format(aDue)));
            edtGiven.setText("0.00");
            edtChange.setText("Balance Due");
        } 
        if(aGiven==aDue){
            change=0;
            edtChange.setText(String.format("%.2f", change));
            printR();
            btnChange.enable(false);
            btnBack.enable(true);
            edtChange.setText("No change");
            try {
                cData.addPoints(cID, points);
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
       
        
        try {
            // TODO add your handling code here:
            db.closeDB();
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
        try {
            new MainMenu(emp).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    
    public Purchase createPurch(String eid, String cid) throws SQLException{
        
        pData.addPurchase(eid, cid);
        
        purchL=pData.getPurchArray();
        Data.Purchase newP= new Data.Purchase();
        newP=purchL.get(purchL.size()-1);
        
        
        
        return newP;
    }
    
    public void insertSP(String s) throws IOException{
        FileWriter my=new FileWriter("c:\\sql\\snackPurch.sql",true);
        my.write("\n"+s+"\n");
        my.close();
        
    }
    public void printR(){
        taReceipt.setText("");
        taReceipt.append("RECEIPT\n");
        taReceipt.append("\n");
        person p= new person();
        p=persData.getUser(myID);
        taReceipt.append("EMPLOYEE: "+ p.getName()+" "+p.getSurname()+"\n");
        p=persData.getUser(cID);
        taReceipt.append("Customer: "+ p.getName()+" "+p.getSurname()+"\n");
        taReceipt.append("\n");
        taReceipt.append("Purchase ID: "+ purchID+"\n");
        taReceipt.append("\n");
        taReceipt.append("Movie "+title+"\n");
        taReceipt.append("\n");
        taReceipt.append("CInema "+cinID+"\n");
        taReceipt.append("\n");
        taReceipt.append("Tickets: \n");
        
        for(int i=0; i<tickL.size();i++)
        {
            if(tickL.get(i).getPID()==purchID)
            {
                for(Seat s: seatL){
                    if(s.getSeatID()==tickL.get(i).getSeatID()){
                       taReceipt.append("Row :"+s.getSeatRow()+", Seat Number: "+s.getSeatNumber()+"\n"); 
                    }
                }
                
            }
            
        }
        taReceipt.append("\n");
        taReceipt.append("Snacks\t"+"Quantity\n");
        
        for(int i=0; i<snackPurch.size();i++)
        {
            taReceipt.append(snackPurch.get(i)+"\t"+snackQuant.get(i)+"\n");
        }
        taReceipt.append("\n");
        taReceipt.append("Points added: "+String.valueOf(points));
        //taReceipt.append("\n");
        //taReceipt.append("Total Points: "+ String.valueOf((cData.getCustomerData(cID)).getPoints()));
        taReceipt.append("\n");
        taReceipt.append("Total: "+String.format("%.2f", total));
        taReceipt.append("\n");
        taReceipt.append("Amount Given: "+ String.format("%.2f", (total+change)));
        taReceipt.append("\n");
        taReceipt.append("Change: "+String.format("%.2f", change));
        
        
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        //</editor-fold>

        //</editor-fold>
        /* Create and display the form */
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTicket;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnCustomer;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnMoreS;
    private javax.swing.JButton btnScn;
    private javax.swing.JButton btnSeatF;
    private javax.swing.JButton btnSnack;
    private javax.swing.JTextField edtAmountDue;
    private javax.swing.JTextField edtChange;
    private javax.swing.JTextField edtCustomer;
    private javax.swing.JTextField edtGiven;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbDate;
    private javax.swing.JComboBox<String> jcbMovie;
    private javax.swing.JComboBox<String> jcbRow;
    private javax.swing.JComboBox<String> jcbSeat;
    private javax.swing.JComboBox<String> jcbSnack;
    private javax.swing.JComboBox<String> jcbTT;
    private javax.swing.JComboBox<String> jcbTime;
    private javax.swing.JCheckBox jchkMovie;
    private javax.swing.JCheckBox jchkTT;
    private javax.swing.JCheckBox jckRow;
    private javax.swing.JPanel pReceipt;
    private javax.swing.JPanel pScreening;
    private javax.swing.JPanel pSeat;
    private javax.swing.JPanel pSnack;
    private javax.swing.JSpinner spnQuantity;
    private javax.swing.JTextArea taReceipt;
    // End of variables declaration//GEN-END:variables
}
